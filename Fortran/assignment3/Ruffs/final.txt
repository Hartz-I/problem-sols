PROGRAM ASSIGNMENT
IMPLICIT NONE

!HERE ARE THE SOLUTIONS FOR THE PROBLEMS NO. 10,12,14,16,29,30

!VARIABLES
!10
INTEGER::I10
REAL:: ARR10(12)

!12
INTEGER:: N12

!14
REAL:: YEAR_14

!16
REAL::N16

!29
REAL:: ARR_D(3,3)
INTEGER::I29,J29

!30
REAL:: ARR_D_30(3,3),ARR_D_30_SINGULAR(3,3)
INTEGER::I30,J30




!SOLUTUONS

!10
READ(*,*)(ARR10(I10),I10=1,12)
CALL PROB10(12,ARR10) 
                                      !TAKES AN INTEGER N AND ARRAY WITH A LENGTH OF N AND PRINTS OUT
                                      !THE LARGEST,2ND LARGEST,SMALLEST AND 2ND SMALLEST NUMBER FROM THE ARRAY
                                      ! AND I USED FUNCTION AS SUBROUTINE
                                      
!12
READ(*,*) N12
CALL PROB12(N12)                      !THIS SUBROUTINE GIVES N+1 LINES OF PASCAL TRIANGLE FOR ANY INT VALUE N
                                      !WHICH GIVES THE (A+B)^N ELABORATION

!14
READ(*,*)YEAR_14
CALL PROB14_LEAP(YEAR_14)             !CHECKS WHEATHER A YEAR IS LEAP YEAR OR NOT

!16
READ(*,*)N16
CALL PROB16_ROOT_OF(N16)              !FINDS THE APPROCIMATE SQUIRE ROOT OF A GIVEN NUMBER CORRECT TILL THE THIRD DECIMAL PLACE USING THE GIVEN METHOD

!29
READ(*,*) ((ARR_D(I29,J29),J29=1,3),I29=1,3)
CALL PROB29_DET(3,ARR_D)              ! I USED THE MATHOD DESCRIBED IN THIS LINK https://www.purplemath.com/modules/determs2.htm
                                      ! THERE WERE EASIER WAYS WHICH I LEARNED LATER BUT I AM PROUD OF WHAT I DID HERE
                                      ! TOOK A LOT OF THINKING OUT OF ME

!30
!FOR SINGULAR MATRIX
READ(*,*) ((ARR_D_30_SINGULAR(I30,J30),J30=1,3),I30=1,3)
CALL PROB30_INV(ARR_D_30_SINGULAR)             !I USED THE ROW REDUCTION METHOD TO FIND THE INVERSE OF THE GIVEN MATRIX
!FOR NON SINGULAR MATRIX
READ(*,*) ((ARR_D_30(I30,J30),J30=1,3),I30=1,3)
CALL PROB30_INV(ARR_D_30)                      !I USED THE ROW REDUCTION METHOD TO FIND THE INVERSE OF THE GIVEN MATRIX

STOP
END PROGRAM ASSIGNMENT !END OF MAIN PROGRAM--------------------------------------------------------------------------------------------------------------


!ALL THE FUNCTIONS AND SUBROUTINES REQUIRED FOR THE SOLUTIONS DESCRIBED ABOVE ARE GIVEN BELOW



!MAIN SUBROUTINE FOR SOLUTION OF QSN NO 10
SUBROUTINE PROB10(N,ARR)
IMPLICIT NONE

INTEGER:: N,I,L1I
REAL::ARR(N)
REAL:: L,L2,S,S2

L1I=1
L=ARR(1)
DO I=2,N,1
IF (L<=ARR(I)) THEN
L=ARR(I) !LARGEST NUMBER
L1I=I
END IF
END DO

IF (L1I.NE.1) THEN
L2=ARR(1)
ELSE
L2=ARR(2)
END IF

DO I=2,N,1
IF (L2<=ARR(I) .AND. ARR(I).NE.ARR(L1I)) THEN
L2=ARR(I) !2ND LARGEST NUMBER
END IF
END DO

L1I=1
S=ARR(1)
DO I=1,N-1,1
IF (S>=ARR(I+1)) THEN
S=ARR(I+1) !SMALLEST NUMBER
L1I=I+1
END IF
END DO

S2=ARR(1)
DO I=2,N,1
IF (S2>=ARR(I) .AND. ARR(I).NE.ARR(L1I)) THEN
S2=ARR(I) !2ND SMALLEST NUMBER
END IF
END DO

WRITE(*,*)'THE ANSWER OF QUSTION 10 FOR GIVEN INPUTS: '
WRITE(*,12)'GREATEST NUMBER: ','2ND GREATEST NUMBER: ','SMALLEST NUMBER: ','2ND SMALLEST NUMBER: '
12 FORMAT(4(4X,A20))
WRITE(*,10)L,L2,S,S2
10 FORMAT(4(2X,F20.2,2X))

PRINT*,' '

END SUBROUTINE PROB10






!MAIN SUBROUTINE FOR QSN NO 12
SUBROUTINE PROB12(N)
IMPLICIT NONE

INTEGER:: N,I,J
REAL::FACT,COMB
WRITE(*,*)'THE ANSWER OF QUESTION 12 FOR GIVEN INPUT: '
DO I=0,N
WRITE(*,15)(COMB(I,J),J=0,I)
15 FORMAT(200(2X,F10.2))
END DO

PRINT*,' '

END SUBROUTINE PROB12

!FACTORIAL FUNCTION FOR 12
FUNCTION FACT(N)
IMPLICIT NONE

INTEGER:: N,I
REAL:: FACT

FACT=1.0
DO I=1,N
FACT=FACT*REAL(I)
END DO

END FUNCTION FACT

!COMBINATION FUNCTION FOR 12
FUNCTION COMB(N,R)
IMPLICIT NONE

INTEGER:: N,R
REAL:: FACT,COMB
COMB=(FACT(N)/((FACT(N-R))*(FACT(R))))

END FUNCTION COMB






!MAIN SUBROUTINE FOR QSN 14
SUBROUTINE PROB14_LEAP(Y)
IMPLICIT NONE

REAL:: Y

WRITE(*,*) 'THE ANSWER OF QUSTION 14 FOR GIVEN INPUTS: '
IF (MOD(Y,4.0)==0.0 .AND. MOD(Y,100.0).NE.0.0) THEN
PRINT*,'THE YEAR',Y, 'IS A LEAP YEAR'
ELSE IF (MOD(Y,400.0)==0.0) THEN
PRINT*,'THE YEAR',INT(Y), 'IS A LEAP YEAR'
ELSE 
PRINT*,'THE YEAR',INT(Y), 'IS NOT A LEAP YEAR'
END IF

PRINT*,' '

END SUBROUTINE PROB14_LEAP





!MAIN SUBROUTINE FOR QSN 16
SUBROUTINE PROB16_ROOT_OF(N)
IMPLICIT NONE

REAL:: F16,F16D,N,X
INTEGER::I
X=N/2

DO WHILE(F16(X,N)>=0.001)
X=X-(F16(X,N))/(F16D(X))
END DO
WRITE(*,*)'ANSWER TO QUESTION NO 16: '
WRITE(*,30)'APPROXIMATE SQUARE ROOT OF',N,'IS', X
30 FORMAT(A30,2X,F10.3,2X,A5,2X,F10.3)

PRINT*,' '

END SUBROUTINE PROB16_ROOT_OF

!FUNCTION FOR QSN 16
FUNCTION F16(X,N)
IMPLICIT NONE

REAL:: X,F16,N

F16=(X**2)-N

END FUNCTION F16

!DERIVATIVE FUNCTION OF F16 FOR 16
FUNCTION F16D(X)
IMPLICIT NONE

REAL::X,F16D

F16D=(2.0)*X

END FUNCTION F16D







! MAIN SUBROUTINE FOR QSN NO. 29
SUBROUTINE PROB29_DET(D,ARR_D)
IMPLICIT NONE

INTEGER:: D,I,J,K,S,TOT1,TOT2
REAL:: ARR_D(D,D+2),REV_COL_ARR_D(D,D+2)



DO I=1,D
DO J=4,D+2
ARR_D(I,J)=ARR_D(I,J-3) !ADDING THE FIRST TWO COLUMNS AT THE END AGAIN. THEREFORE IT BECOMES A 3*5 MATRIX
END DO
END DO

S=1
TOT1=0

DO K=1,D
DO I=1,D
DO J=I,D+2
IF (I==J) THEN
S=S*ARR_D(I,J+(K-1)) !SUM OF MULTIPLICATION OF CORNERS FROM LEFT TO RIGHT
END IF
END DO
END DO
TOT1=TOT1+S
S=1
END DO


DO I=1,D
DO J=D+2,1,-1
REV_COL_ARR_D(I,(D+3)-J)=ARR_D(I,J) !REVERSING THE (3,5) MATRIX WITH RESPECT TO COLUMNS
END DO
END DO

S=1
TOT2=0

DO K=1,D
DO I=1,D
DO J=I,D+2
IF (I==J) THEN
S=S*REV_COL_ARR_D(I,J+(K-1))    !AGAIN SUM OF MULTIPLICATION OF CORNERS FROM LEFT TO RIGHT
                                !BUT THIS TIME IT'S ON THE REVERSED COLUMN SPACE
                                !WHICH GIVES THE SUM OF MULTIPLICATIONS OF CORNERS FROM RIGHT TO LEFT
END IF
END DO
END DO
TOT2=TOT2+S
S=1
END DO

PRINT*, 'THE ANSWER OF QUESTION 29 FOR INPUT MATRIX: '
PRINT*, 'THE DETERMINANT IS' ,TOT1-TOT2 !SUBSTRUCTING FIRST ONE FROM SECOND GIVES THE DETERMINANT OF THE 3*3 MATRIX

PRINT*,' '

END SUBROUTINE PROB29_DET







!MAIN SUBROUTINE FOR QSN 30
SUBROUTINE PROB30_INV(ARR_D)
IMPLICIT NONE

REAL:: ARR_D(3,3),I_D(3,3),ARR_PH(3,3),K,DET
INTEGER:: I,J

IF (DET(3,ARR_D)==0.0) THEN
PRINT*, 'THE ANSWER OF QUESTION 30 FOR INPUT MATRIX: '
PRINT*,'NO SUCH INVERSE IS POSSIBLE AS THE MATRIX IS SINGULAR I.E. DETERMINANT IS ZERO.' !DOES THIS IF A MATRIX IS SINGULAR
GO TO 110
END IF

DO I=1,3
DO J=1,3
IF (I==J) THEN
I_D(I,J)=1
ELSE
I_D(I,J)=0  !CREATING AN IDENTITY MATRIX
END IF
END DO
END DO

ARR_PH=ARR_D
DO I=2,3
DO J=1,3
I_D(I,J)=(ARR_D(1,1)*I_D(I,J))-(ARR_D(I,1)*I_D(1,J))        
ARR_PH(I,J)=(ARR_D(1,1)*ARR_D(I,J))-(ARR_D(I,1)*ARR_D(1,J)) !REDUCING THE BOTTOM TWO ELLEMENTS OF THE FIRST COLUMN TO ZERO
                                                            ! AND APPLYING THE SAME CONDITIONS ON IDENTITY MATRIX
END DO
END DO


ARR_D=ARR_PH
DO I=3,3
DO J=1,3
I_D(I,J)=(ARR_D(2,2)*I_D(I,J))-(ARR_D(I,2)*I_D(2,J))
ARR_PH(I,J)=(ARR_D(2,2)*ARR_D(I,J))-(ARR_D(I,2)*ARR_D(2,J)) !REDUCING THE BOTTOM ROW MIDDLE ELLEMENT
END DO
END DO

ARR_D=ARR_PH
DO I=2,1,-1
DO J=3,1,-1
I_D(I,J)=(ARR_D(3,3)*I_D(I,J))-(ARR_D(I,3)*I_D(3,J))
ARR_PH(I,J)=(ARR_D(3,3)*ARR_D(I,J))-(ARR_D(I,3)*ARR_D(3,J)) !REDUCING THE UPPER TWO ELLEMENTS OF THE THIRD COLUMN TO ZERO
END DO
END DO

ARR_D=ARR_PH
DO I=1,1
DO J=3,1,-1
I_D(I,J)=(ARR_D(2,2)*I_D(I,J))-(ARR_D(I,2)*I_D(2,J))
ARR_PH(I,J)=(ARR_D(2,2)*ARR_D(I,J))-(ARR_D(I,2)*ARR_D(2,J)) !REDUCING THE UPPER ROW MIDDLE ELEMENT
END DO
END DO

ARR_D=ARR_PH

K=ARR_D(1,1)
DO I=1,3
DO J=1,3
IF (J==1) THEN
K=ARR_D(I,I)
END IF
I_D(I,J)=I_D(I,J)/K !DIVIDING EACH ROW OF THE CHANGED FORM OF THE IDENTITY MATRIX WITH
                    !DIAGONAL VALUE OF REDUCED MAIN MATRIX
END DO
END DO

PRINT*, 'THE ANSWER OF QUESTION 30 FOR INPUT MATRIX: '
PRINT*, 'INVERSE OF THE MATRIX: '
DO I=1,3
WRITE(*,25) (I_D(I,J),J=1,3) !HENCE THIS GIVES US THE INVERSE MATRIX
25 FORMAT(2X,9(2X,F10.5))
END DO
110 PRINT*,' '
END SUBROUTINE PROB30_INV

!DETERMINANT FUNCTION FOR 30
FUNCTION DET(D,ARR_D)
IMPLICIT NONE

INTEGER:: D,I,J,K,S,TOT1,TOT2
REAL:: ARR_D(D,D+2),REV_COL_ARR_D(D,D+2),DET



DO I=1,D
DO J=4,D+2
ARR_D(I,J)=ARR_D(I,J-3) !ADDING THE FIRST TWO COLUMNS AT THE END AGAIN. THEREFORE IT BECOMES A 3*5 MATRIX
END DO
END DO

S=1
TOT1=0

DO K=1,D
DO I=1,D
DO J=I,D+2
IF (I==J) THEN
S=S*ARR_D(I,J+(K-1)) !SUM OF MULTIPLICATION OF CORNERS FROM LEFT TO RIGHT
END IF
END DO
END DO
TOT1=TOT1+S
S=1
END DO


DO I=1,D
DO J=D+2,1,-1
REV_COL_ARR_D(I,(D+3)-J)=ARR_D(I,J) !REVERSING THE (3,5) MATRIX WITH RESPECT TO COLUMNS
END DO
END DO

S=1
TOT2=0

DO K=1,D
DO I=1,D
DO J=I,D+2
IF (I==J) THEN
S=S*REV_COL_ARR_D(I,J+(K-1))    !AGAIN SUM OF MULTIPLICATION OF CORNERS FROM LEFT TO RIGHT
                                !BUT THIS TIME IT'S ON THE REVERSED COLUMN SPACE
                                !WHICH GIVES THE SUM OF MULTIPLICATIONS OF CORNERS FROM RIGHT TO LEFT
END IF
END DO
END DO
TOT2=TOT2+S
S=1
END DO

DET=TOT1-TOT2

END FUNCTION DET